upstream origin {
        server os-edge-sc-02.udvashunmesh.com:443;
        keepalive 64;
    }

server {
    listen 80;
    #server_name os-edge-mc-02.udvashunmesh.com;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    #server_name os-edge-mc-02.udvashunmesh.com;
    proxy_ignore_headers "vary";
    proxy_hide_header "access-control-allow-origin";
    proxy_hide_header "access-control-allow-credentials";
    proxy_hide_header "access-control-allow-methods";
    proxy_hide_header "access-control-allow-headers";
    #add_header 'Access-Control-Allow-Origin' '*';

    ssl_certificate /etc/certs/udvashunmesh.com/STAR.udvashunmesh.com.pem;
    ssl_certificate_key /etc/certs/udvashunmesh.com/STAR.udvashunmesh.com.key.pem;
    ssl_trusted_certificate /etc/certs/udvashunmesh.com/STAR.udvashunmesh.com.fullchain.pem;

    #ssl_certificate /etc/certs/osl.team/STAR.osl.team.pem;
    #ssl_certificate_key /etc/certs/osl.team/STAR.osl.team.key.pem;
    #ssl_trusted_certificate /etc/certs/osl.team/STAR.osl.team.fullchain.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 60m;


    location ~ ^/.*\.m3u8$ {
                proxy_cache cache_zone_one;             # Cache responses in the 'cache_zone_one' cache
                proxy_cache_valid any 10s;               # Cache 200 responses for 1 hour
                #proxy_cache_use_stale error timeout;    # Use stale cache if upstream is unavailable
                proxy_cache_key $request_uri;           # Key to uniquely identify each cache entry

                # Normalize cache key without query parameters
                #set $normalized_uri_lowercase $scheme://$server_name$uri;
                #proxy_cache_key $normalized_uri_lowercase;


                proxy_cache_lock on;                    # Enable cache lock to handle burst requests
                proxy_cache_lock_timeout 4s;           # Timeout for waiting on the cache lock
                proxy_cache_lock_age 4s;                # Age for cache lock

                add_header pop-cache $upstream_cache_status;
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Expose-Headers' 'Pop, Server-Id, X-Cache-Status, Vary, Content-Length, Content-Encoding';
                add_header 'pop' 'sc5e';

                #proxy_hide_header 'Server-Id';
                #add_header 'Server-Id' 'dc4e';
                proxy_set_header Connection "";
                proxy_http_version 1.1;
                proxy_pass https://origin;
        }

    location ~ ^/.*\.m4s$ {
                proxy_cache cache_zone_one;
                proxy_cache_valid 200 10m;
                #proxy_cache_use_stale error timeout;
                #proxy_cache_key $request_uri;

                # Normalize cache key without query parameters
                set $normalized_uri_lowercase $scheme://$server_name$uri;
                proxy_cache_key $normalized_uri_lowercase;

                proxy_cache_lock on;                    # Enable cache lock to handle burst requests
                proxy_cache_lock_timeout 2s;           # Timeout for waiting on the cache lock
                proxy_cache_lock_age 2s;                # Age for cache lock

                #add_header X-Cache-Status $upstream_cache_status;
                #add_header 'Access-Control-Allow-Origin' '*';

                add_header pop-cache $upstream_cache_status;
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Expose-Headers' 'Pop, Server-Id, X-Cache-Status, Vary, Content-Length, Content-Encoding';
                add_header 'pop' 'sc5e';

                proxy_set_header Connection "";
                proxy_http_version 1.1;
                proxy_pass https://origin;
        }
}